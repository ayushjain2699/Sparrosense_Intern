cur = 524*60
no = 60
avg = 400
price = 452
no = 100
new_avg = (price*no+cur)/(60+no)
no = 200
new_avg = (price*no+cur)/(60+no)
433
32
422*32
433/4
32*4
(128*125+(433.5*32))/(32+128)
avg = 135
cur = 433.5*32
price = 125
av = (cur+no*price)/(no+32)
200*price
17.12/8
17.12*500
17.12*500*8
17.12*500*8/2.85
cur = 17.12*500
price = 2.85
no = 2000
av = (cur+no*price)/(no+500)
no = 25000
av = (cur+no*price)/(no+500)
download.file("https://lilianweng.github.io/lil-log/2019/11/10/self-supervised-learning.html")
download.file("https://lilianweng.github.io/lil-log/2019/11/10/self-supervised-learning.html",destfile = "./lilianweng.html")
dir()
download.file("https://lilianweng.github.io/lil-log/2019/11/10/self-supervised-learning.html",destfile = "./lilianweng.pdf")
library(ggplot2)
x = 200:4000:200
x = 200:4000
x = seq(200,4000,200)
x
y = c(62.5,69,67.5,74.2,74.5,80.5,80.7,81.5,82.2,79.8,81.3,83.7,85.8,83,78.8,81.3,82.5,81.8,83.3,82.7)
data = data.frame(x = x,y = y)
data
g = ggplot(data,aes(x,y))
g+geom_line()
g+geom_line()
library(ggplot2)
g+geom_line()
g+geom_line() + ggtitle("Only FC Layers")
plot(x,y)
plot(x,y,ltype = 'l')
plot(x,y,type = l)
plot(x,y,type = "l")
plot(x,y,type = "l",main = "Only fc Layers")
par(mfrow = c(1,3))
plot(x,y,type = "l",main = "Only fc Layers")
title(x = "iterations", y = "accuracy")
x2 = c(200,400,600,800,1000)
y2 = c(73.2,89.7,92.8,97.3,95.8)
plot(x2,y2,main = "fine tuning")
plot(x2,y2,main = "fine tuning")
plot(x,y,type = "l",main = "Only fc Layers")
title(x = "iterations", y = "accuracy")
plot(x2,y2,main = "fine tuning",type = "l")
title(x = "iterations", y = "accuracy")
plot(x2,y2,main = "fine tuning",type = "l")+lines(x,y)
plot(x,y,type = "l",main = "Only fc Layers")
title(x = "iterations", y = "accuracy")
plot(x2,y2,main = "fine tuning",type = "l")
title(x = "iterations", y = "accuracy")
title(title = "initilized weights from pretext then fine tuning")
plot(x2,y2,main = "fine tuning",type = "l")
plot(x,y,type = "l",main = "Only fc Layers",ylim = c(0,100))
plot(x,y,type = "l",main = "Only fc Layers",ylim = c(0,100))
plot(x,y,type = "l",main = "Only fc Layers",ylim = c(0,100))
plot(x,y,type = "l",main = "Only fc Layers",ylim = c(55,100))
plot(x,y,type = "l",main = "Only fc Layers",ylim = c(55,100))
plot(x,y,type = "l",main = "Only fc Layers",ylim = c(55,100))
par(mfrow = c(1,1))
plot(x,y,type = "l",main = "Only fc Layers",ylim = c(55,100))
lines(x2,y2)
lines(x2,y2,col = 'r')
lines(x2,y2,col = 'red')
y3 = c(68.8,87.8,95.7,95,98)
lines(x2,y3,col = 'blue')
title("accuracy")
plot(x,y,type = "l",main = "Accuracy",ylim = c(55,100))
lines(x2,y2,col = 'red')
lines(x2,y3,col = 'blue')
legend("topright",col = c("black","red","blue"),legend = c("Only fc layers","Training model with pre_initialized weights for C3D","Training full model from scratch"))
legend("topright",col = c("black","red","blue"),legend = c("Only fc layers","Training model with pre_initialized weights for C3D","Training full model from scratch"),pch = 2)
legend("topright",col = c("black","red","blue"),legend = c("Only fc layers","Training model with pre_initialized weights for C3D","Training full model from scratch"),pch = 3)
legend("topright",col = c("black","red","blue"),legend = c("Only fc layers","Training model with pre_initialized weights for C3D","Training full model from scratch"),pch = 4)
legend("topright",col = c("black","red","blue"),legend = c("Only fc layers","Training model with pre_initialized weights for C3D","Training full model from scratch"),pch = 25)
legend("topright",col = c("black","red","blue"),legend = c("Only fc layers","Training model with pre_initialized weights for C3D","Training full model from scratch"),pch = 15)
x2 = seq(1,5)
x2 = x2*100
y2 = c(50,56,58,64,69)
library(ggplot2)
d = data.frame(x = x,y = y)
g = ggplot(d,aes(x = x,y = y))
g+geom_line()
g+geom_line(col = 'red')
g+geom_line(col = 'red')+geom_line(aes(x = x2,y = y2),col = 'blue')
x = seq(200,2200,200)
x
x = seq(200,2200,200)
y_full = c(50.67,50.26,51.4,57.26,52.2,62.2,61,59,58.8)
y_full = c(50.67,50.26,51.4,57.26,52.2,62.2,61,59,62.3,59.86,58.8)
plot(x = x,y = y_full,type = 'l')
plot(x = x,y = y_full,type = 'l',col = "red")
plot(x = x,y = y_full,type = 'l',col = "red",ylim = c(50,90))
plot(x = x,y = y_full,type = 'l',col = "red",ylim = c(50,80))
plot(x = x,y = y_full,type = 'l',col = "red",ylim = c(50,80))
y_fine = c(69.5,62.9,69.33,71.0,69.6,72,71.2,71.2,72.1,71)
y_fine = c(69.5,62.9,69.33,71.0,69.6,69.6,72,71.2,71.2,72.1,71)
lines(x = x,y = y_fine, col = "blue")
legend("topright",col = c("red","blue"),legend = c("scratch","SL"),pch = 18)
title(x = "iterations",y = "Accuracy")
plot(x = x,y = y_full,type = 'l',col = "red",xlab = "iterations",ylab = "accuray")
plot(x = x,y = y_full,type = 'l',col = "red",xlab = "iterations",ylab = "accuray",ylim = c(50,80))
lines(x = x,y = y_fine, col = "blue")
legend("topright",col = c("red","blue"),legend = c("scratch","SL"),pch = 18)
title(main = "Test Accuracy")
x = sequence(200,12,200)
x = sequence(12,200,200)
x
y = c(62.4,61.4,76.4,76.8,77.7,87.9,87.6,89.1,93.3,84.9,84.4)
plot(x,y)
y = c(62.4,61.4,76.4,76.8,77.7,87.9,87.6,89.1,89.5,93.3,84.9,84.4)
plot(x,y)
plot(x,y,type = 'l')
plot(x,y,type = 'l',color = "red")
plot(x,y,type = 'l',col = "red")
title("SL Test Accuracy")
ylab("fwf")
plot(x,y,type = 'l',col = "red",xlab = "Iterations",ylab = "Accuracy(%)")
title("SL Test Accuracy")
clear
setwd("D:/Docs/Sparrosense_Intern/Cleaning")
load(".RData")
str(data)
data$V1 = gsub(".mp4","",data$V1)
data$V2 = gsub(".mp4","",data$V2)
str(data)
table(data$V6)
table(data[l1,3])
table(data[l2,3])
table(data[l3,3])
table(data[l4,3])
table(data[l5,3])
table(data[l6,3])
table(data[l7,3])
table(data[l8,3])
table(data[l9,3])
table(data[l10,3])
table(data[l11,3])
1547+1260+645
1360*0.8
1088+1088+214+736+966
ltemp1 = T
ltemp2 = F
ltemp1+ltemp2
ltemp1*ltemp2
l_train1 = l3+l4+l5
table(data[l_train1,3])
table(l_train1)
l_train1 = as.logical(l_train1)
table(data[l_train1,3])
1070*3
600*4
+300
600*4
2750/4
l_train1 = l3+l4+l5+l1+l2+l6+l7+l10
l_train1 = as.logical(l_train1)
table(data[l_train1,3])
l_test1 = l8+l9+l11
l_test1 = as.logical(l_test1)
table(data[l_test1,3])
850+650+593+214+700
3007/4
200+131+143+100+200
774/30
200+131+143+100+197
771*4
ag_train = data[l_train1,]
ag_train = data[data[l_train1,3]=="1",]
ag_train = data[l_train,][data[l_train1,3]=="1",]
ag_train = data[l_train1,][data[l_train1,3]=="1",]
cp_train = data[l_train1,][data[l_train1,3]=="2",]
fp_train = data[l_train1,][data[l_train1,3]=="3",]
sc_train = sc
vc_train = data[l_train1,][data[l_train1,3]=="5",]
ag_test = data[l_test1,][data[l_test1,3]=="1",]
cp_test = data[l_test1,][data[l_test1,3]=="2",]
fp_test = data[l_test1,][data[l_test1,3]=="3",]
vc_test = data[l_test1,][data[l_test1,3]=="5",]
sc_test = sc
rows_ag = sample(nrow(ag_train))
rows_cp = sample(nrow(cp_train))
rows_fp = sample(nrow(fp_train))
rows_vc = sample(nrow(vc_train))
data_train = rbind(ag_train[rows_ag,][1:850,],cp_train[rows_cp,][1:650,],fp_train[rows_fp,],sc_train,vc_train[rows_vc,][1:700,])
rows_ag = sample(nrow(ag_test))
rows_cp = sample(nrow(cp_test))
rows_fp = sample(nrow(fp_test))
rows_vc = sample(nrow(vc_test))
rows_sc = sample(nrow(sc_test))
data_test = rbind(ag_test[rows_ag,][1:200,],cp_test[rows_cp,],fp_test[rows_fp,],sc_test[1:100],vc_test[rows_vc,][1:197,])
data_test = rbind(ag_test[rows_ag,][1:200,],cp_test[rows_cp,],fp_test[rows_fp,],sc_test[1:100,],vc_test[rows_vc,][1:197,])
str(data_train)
data_train$final = paste(data_train$V1,data_train$V2,data_train$V3,data_train$V4,data_train$V5,sep = " ")
data_test$final = paste(data_test$V1,data_test$V2,data_test$V3,data_test$V4,data_test$V5,sep = " ")
write(data_train$final,"latest_SL_train.list")
write(data_test$final,"latest_SL_test.list")
table(grepl(".mp4",data$V1))
table(grepl(".mp4",sc$V1))
sc$V1 = gsub(".mp4","",sc$V1)
sc$V2 = gsub(".mp4","",sc$V2)
sc_train$V2 = gsub(".mp4","",sc_train$V2)
sc_train$V1 = gsub(".mp4","",sc_train$V1)
sc_test$V1 = gsub(".mp4","",sc_test$V1)
sc_test$V2 = gsub(".mp4","",sc_test$V2)
data_train = rbind(ag_train[rows_ag,][1:850,],cp_train[rows_cp,][1:650,],fp_train[rows_fp,],sc_train,vc_train[rows_vc,][1:700,])
rows_ag = sample(nrow(ag_train))
rows_cp = sample(nrow(cp_train))
rows_fp = sample(nrow(fp_train))
rows_vc = sample(nrow(vc_train))
data_train = rbind(ag_train[rows_ag,][1:850,],cp_train[rows_cp,][1:650,],fp_train[rows_fp,],sc_train,vc_train[rows_vc,][1:700,])
rows_ag = sample(nrow(ag_test))
rows_cp = sample(nrow(cp_test))
rows_fp = sample(nrow(fp_test))
rows_vc = sample(nrow(vc_test))
rows_sc = sample(nrow(sc_test))
data_test = rbind(ag_test[rows_ag,][1:200,],cp_test[rows_cp,],fp_test[rows_fp,],sc_test[1:100,],vc_test[rows_vc,][1:197,])
data_train$final = paste(data_train$V1,data_train$V2,data_train$V3,data_train$V4,data_train$V5,sep = " ")
data_test$final = paste(data_test$V1,data_test$V2,data_test$V3,data_test$V4,data_test$V5,sep = " ")
write(data_train$final,"latest_SL_train.list")
write(data_test$final,"latest_SL_test.list")
x = sequence(20,300,300)
x
y_train = c(58.3,67.5,70.8,72,77.7,79.2,83,82.2,83.5,80.8,84.8,83.5,84.5,86.2,84.2,85,82.0,83.3)
x = sequence(17,300,300)
x = sequence(18,300,300)
plot(x,y_train,type = "l")
library(ggplot1)
library(ggplot2)
qplot(x,y_train)
qplot(x,y_train,geom = "lines")
qplot(x,y_train,geom = "geom_lines")
qplot(x,y_train,geom = "geom_line")
qplot(x,y_train,geom = line)
qplot(x,y_train,geom = lines)
plot(x,yy_train)
plot(x,y_train)
plot(x,y_train,type = "l")
plot(x,y_train,type = "l",col = "red")
table(data_train$V3)
500*5
rows_ag = sample(nrow(ag_train))
rows_cp = sample(nrow(cp_train))
rows_fp = sample(nrow(fp_train))
rows_vc = sample(nrow(vc_train))
data_train = rbind(ag_train[rows_ag,][1:500,],cp_train[rows_cp,][1:500,],fp_train[rows_fp,][1:500,],sc_train,sc_train,sc_train[rows_sc,][1:72,],vc_train[rows_vc,][1:500,])
str(data_train)
data_train$final = paste(data_train$V1,data_train$V2,data_train$V3,data_train$V4,data_train$V5,sep = " ")
write(data_test$final,"latest_SL_test_new.list")
write(data_train$final,"latest_SL_train_new.list")
y_train - c(20.5,19.7,30.2,47.3,60.3,68.3,73.7,75.7,74.0,78.0,79.2,77.7,75.7,81.7,86,78.7,85.3,76.2,88.5,85.0,84.0,80.2)
y_train =\ c(20.5,19.7,30.2,47.3,60.3,68.3,73.7,75.7,74.0,78.0,79.2,77.7,75.7,81.7,86,78.7,85.3,76.2,88.5,85.0,84.0,80.2)
y_train = c(20.5,19.7,30.2,47.3,60.3,68.3,73.7,75.7,74.0,78.0,79.2,77.7,75.7,81.7,86,78.7,85.3,76.2,88.5,85.0,84.0,80.2)
y_train
load(".RData")
y_train = c(20.5,19.7,30.2,47.3,60.3,68.3,73.7,75.7,74.0,78.0,79.2,77.7,75.7,81.7,86,78.7,85.3,76.2,88.5,85.0,84.0,80.2)
x = seqience(22,200,200)
x = sequence(22,200,200)
plot(x,y,type = "l")
plot(x,y_train,type = "l")
y_train = c(20.5,19.7,30.2,47.3,60.3,68.3,73.7,75.7,74.0,78.0,79.2,77.7,75.7,81.7,86,78.7,85.3,76.2,88.5,85.0,84.0,80.2,90.3)
x = sequence(23,200,200)
plot(x,y_train,type = "l")
library(ggplot2)
qplot(x,y_train)
qplot(x,y_train,geom = "line")
qplot(x,y_train,geom = "line",col = "red")
qplot(x,y_train,geom = "line",color = "red")
qplot(x,y_train,geom = "line",fill = "red")
qplot(x,y_train,geom = "line",color = "red")
qplot(x,y_train,geom = "line",color = "red",geom = "smooth")
qplot(x,y_train,geom = c("line","smooth"),color = "red")
qplot(x,y_train,geom = "line",color = "red",geom = "smooth")
qplot(x,y_train,geom = "line",color = "red")
qplot(x,y_train,geom = "line",color = "red",title = "sd")
qplot(x,y_train,geom = "line",color = "red")
qplot(x,y_train,geom = "line",color = "red")
y_train = c(20.5,19.7,30.2,47.3,60.3,68.3,73.7,75.7,74.0,78.0,79.2,77.7,75.7,81.7,86,78.7,85.3,76.2,88.5,85.0,84.0,80.2,90.3,83.7)
x = sequence(24,200,200)
qplot(x,y_train,geom = "line",color = "red")
qplot(x,y_train,geom = c("line","smooth"),color = "red")
y_train = c(20.5,19.7,30.2,47.3,60.3,68.3,73.7,75.7,74.0,78.0,79.2,77.7,75.7,81.7,86,78.7,85.3,76.2,88.5,85.0,84.0,80.2,90.3,83.7,82.3)
x = sequence(25,200,200)
qplot(x,y_train,geom = "line",color = "red")
y_train = c(20.5,19.7,30.2,47.3,60.3,68.3,73.7,75.7,74.0,78.0,79.2,77.7,75.7,81.7,86,78.7,85.3,76.2,88.5,85.0,84.0,80.2,90.3,83.7,82.3,86)
x = sequence(26,200,200)
qplot(x,y_train,geom = "line",color = "red")
y_train = c(20.5,19.7,30.2,47.3,60.3,68.3,73.7,75.7,74.0,78.0,79.2,77.7,75.7,81.7,86,78.7,85.3,76.2,88.5,85.0,84.0,80.2,90.3,83.7,82.3,86,87.3)
x = sequence(27,200,200)
qplot(x,y_train,geom = "line",color = "red")
x = sequence(28,200,200)
y_train = c(20.5,19.7,30.2,47.3,60.3,68.3,73.7,75.7,74.0,78.0,79.2,77.7,75.7,81.7,86,78.7,85.3,76.2,88.5,85.0,84.0,80.2,90.3,83.7,82.3,86,87.3,89.5)
qplot(x,y_train,geom = "line",color = "red")
y_train = c(20.5,19.7,30.2,47.3,60.3,68.3,73.7,75.7,74.0,78.0,79.2,77.7,75.7,81.7,86,78.7,85.3,76.2,88.5,85.0,84.0,80.2,90.3,83.7,82.3,86,87.3,89.5,88.8)
x = sequence(29,200,200)
qplot(x,y_train,geom = "line",color = "red")
y_train = c(20.5,19.7,30.2,47.3,60.3,68.3,73.7,75.7,74.0,78.0,79.2,77.7,75.7,81.7,86,78.7,85.3,76.2,88.5,85.0,84.0,80.2,90.3,83.7,82.3,86,87.3,89.5,88.8,89.3)
x = sequence(30,200,200)
qplot(x,y_train,geom = "line",color = "red")
22*35
22*70
22*105
20*105
22*100
load(".RData")
load(".Rhistory")
data_temp = rbind(ag_train[rows_ag,][501:650,],cp_train[rows_cp,][501:650,],fp_train[rows_fp,][501:593,],sc[rows_sc,][1:150],vc_train[rows_vc,][501:650,])
data_temp = rbind(ag_train[rows_ag,][501:650,],cp_train[rows_cp,][501:650,],fp_train[rows_fp,][501:593,],sc[rows_sc,][1:150,],vc_train[rows_vc,][501:650,])
data_temp$final = paste(data_temp$V1,data_temp$V2,data_temp$V3,data_temp$V4,data_temp$V5,sep = " ")
set.seed(seed)
n = sample(nrow(temp))
n = sample(nrow(data_temp))
data_temp = data_temp[n,]
write(data_temp$final,"test.list")
22*30
22*31
data_train[500,]
data_train[501,]
data_train["5005",]
data_train[500,]
ag_train[500,]
ag_train[rows_ag,][500,]
data_train[500,]
ag_train[rows_ag,][500,]
22*31
x
x_test = sequence(12,1800,200)
x_test
x_test = sequence(22,1800,200)
x_test
plot(x,y_train,type = "l",col="red")
plot(x,y_train,type = "l",col="red",xlab = "Iterations",ylab = "Accuracy")
y_test = c(72,80,80,78.3,73.4,81.67,82.8,78.0,80,78.15,81.37,81.9,81.23,80.35,84.6,83.8,82.8,86.5,85.0,83.7,85.33,87.2)
lines(x_test,y_test,col="blue")
legend("topleft",legend = c("train","test"),col = c("red","blue"))
legend("topleft",legend = c("train","test"),col = c("red","blue"),pch = 17)
x
y_train
y_train = c(20.5)
y_train = c(20.5,19.7,30.2,47.3,60.3,68.3,73.7,75.7,74,78.0,79.2,77.7,75.7,81.7,86.0,78.7,85.3,76.2,88.5,85.0,84,80.2,90.3,83.7,82.3,86,87.3,89.5,88.8,89.3)
x_train = sequence(30,200,200)
x_train
plot(x_train,y_train,type = "l",col="red",xlab = "Iterations",ylab = "Accuracy")
lines(x_test,y_test,col="blue")
legend("topleft",legend = c("train","test"),col = c("red","blue"),pch = 17)
22*31
2500/4
data[l_test,]
table(data[l_test1,]$V3)
unique(data[l_test1,]$V6)
unique(data[l_train1,]$V6)
str(data)
d=c(1,2,3,4,5)
sd(d)
mean(d)
pnorm(0)
pnorm(1)
d = c(16)
d = c(16.70,16
)
d = c(16.7,16,65,16.68,16.60,16.58,16.63)
sd(d)
d
d = c(16.7,16.65,16.68,16.60,16.58,16.63)
sd(d)
x = sd(d)
x^2
diff = d-mean(d)
mean(diff)
diff
diff = abs(d-mean(d))
mean(diff)
clear
std_dev->function(data){
sd(data)
}
std_dev<-function(data){
sd(data)
}
std_dev(d)
std_dev<-function(data){
sd(data)
}
avg_dev<-function(data)
{
d1 = abs(data-mean(data))
mean(d1)
}
rel_avg_dev<-function(data)
{
d_bar = avg_dev(data)
ans = (d_bar/mean(data))*1000
ans
}
rel_avg_dev(d)
0.036/16.64
mean(d)
median(d)
range(d)
mean(d)
median(d)
range(d)
load("functions.R")
source("functions.R")
s_mean(data)
s_mean(d)
t.test(d)
t.test(d,conf.level = 0.9)
t = 93.50,93.58,93.43
t = c(93.50,93.58,93.43)
pt(0.95,df = 2)
qt(p = 0.95,df = 2)
qt(p = 0.05,df = 2)
qt(p = 0.025,df = 2)
std_dev<-function(data){
sd(data)
}
avg_dev<-function(data)
{
d1 = abs(data-mean(data))
mean(d1)
}
rel_avg_dev<-function(data)
{
d_bar = avg_dev(data)
ans = (d_bar/mean(data))
ans
}
rsd<-function(data)
{
s = sd(data)
ans = (s/mean(data))
ans*100
}
s_mean<-function(data)
{
n = length(data)
sd(data)/(n^0.5)
}
rs_mean<-function(data)
{
s_mean(data)/mean(data)
}
d = c(1,2,3,4,5,6,7,8,9,10)
mean(d)
median(d)
range(d)
avg_dev(d)
rel_avg_dev(d)
sd(d)
rsd(d)
var(d)
s_mean(d)
rs_mean(d)
